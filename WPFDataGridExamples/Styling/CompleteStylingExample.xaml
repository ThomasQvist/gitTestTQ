<Window x:Class="WPFDataGridExamples.CompleteStylingExample"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dg="http://schemas.microsoft.com/wpf/2008/toolkit"
    Title="Styling Example" Height="300" Width="600" WindowStyle="None">
    <Window.Resources>
        
        <XmlNamespaceMappingCollection x:Key="map">
            <XmlNamespaceMapping Prefix="media" Uri="http://search.yahoo.com/mrss/"/>
        </XmlNamespaceMappingCollection>

        <XmlDataProvider x:Key="FlickrFeed"
                     Source="http://api.flickr.com/services/feeds/photos_public.gne?tags=juggling&amp;lang=en-us&amp;format=rss_200"  
                     XPath="//item[string-length(title)>0]" />       
        
        <CollectionViewSource  x:Key="FlickrGroupedFeed" Source="{Binding Source={StaticResource FlickrFeed}}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="author"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <Style TargetType="{x:Type dg:DataGrid}">
            <Setter Property="Background" Value="Black"/>
        </Style>


        <LinearGradientBrush x:Key="SelectedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#767474"/>
            <GradientStop Offset="1" Color="#A1A1A1"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="RolloverBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FEB74B"/>
            <GradientStop Offset="1" Color="#F19201"/>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="GlassBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0" Color="#66ffffff"/>
            <GradientStop Offset="0" Color="#36FFFFFF"/>
            <GradientStop Offset="1" Color="#B5EBE7E7"/>
        </LinearGradientBrush>
        
        <!-- data grid row styled, custom colors and rollover/selection property triggers -->
        <Style TargetType="{x:Type dg:DataGridRow}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#414040" />
            <Setter Property="BorderThickness" Value="0,1,0,1" />
            <Setter Property="BorderBrush" Value="#616161" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource RolloverBrush}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{StaticResource SelectedBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- styled to remove the standard blue selection colour and increase the padding -->
        <Style x:Key="{x:Type dg:DataGridCell}" TargetType="{x:Type dg:DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dg:DataGridCell}">
                        <Border Padding="5"  Background="{TemplateBinding Background}" 
                              BorderBrush="{TemplateBinding BorderBrush}"  
                              BorderThickness="{TemplateBinding BorderThickness}" 
                              SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static dg:DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" Value="{StaticResource SelectedBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- column headers styled to create a rounded tab effect and to add sort arrows -->
        <Style TargetType="{x:Type dg:DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dg:DataGridColumnHeader}">                      
                        <Grid>
                           <Border Name="MainBorder" BorderThickness="2,2,2,0" CornerRadius="8,8,0,0" Margin="0,0,1,0" BorderBrush="#5FACE7" Background="#2F73B2">
                               <Grid>
                                    <!-- an overlayer glass effect -->
                                    <Border VerticalAlignment="Top" Name="GradientBorder" Height="10" CornerRadius="7,7,0,0"  BorderBrush="#D99466" Background="{StaticResource GlassBrush}"/>                                    
                                    <ContentPresenter Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </Grid>
                            </Border>
                            <Path Name="UpArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="7,0"/>
                                            <LineSegment Point="3.5,6"/>
                                            <LineSegment Point="0,0"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Path Name="DownArrow" Fill="White" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Margin="0,2,7,0" Visibility="Hidden">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,6">
                                            <LineSegment Point="7,6"/>
                                            <LineSegment Point="3.5,0"/>
                                            <LineSegment Point="0,6"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="UpArrow" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="DownArrow" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="DownArrow" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="UpArrow" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- DataGridColumnHeadersPresenter styled to remove the DataGridColumnHeader that spans the entire grid -->
        <Style x:Key="{x:Type dg:DataGridColumnHeadersPresenter}" TargetType="{x:Type dg:DataGridColumnHeadersPresenter}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dg:DataGridColumnHeadersPresenter}">
                        <Grid>
                            <ItemsPresenter />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- a grouping style that uses an expander to render the rouped data -->
        <Style x:Key="GroupContainerStyle" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupItem}">
                        <Expander IsExpanded="True" Background="#414040">
                            <Expander.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Orientation="Horizontal" TextBlock.Foreground="White" Margin="0,0,10,0">
                                        <TextBlock Text="{Binding Path=Name}"/>
                                        <TextBlock Text=" has uploaded "/>
                                        <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                        <TextBlock Text=" photos"/>
                                    </StackPanel>
                                    <Line Grid.Column="1" SnapsToDevicePixels="true"  X1="0" X2="1" Stretch="Fill"  Stroke="Orange" StrokeThickness="1"/>
                                </Grid>                                
                            </Expander.Header>
                            <ItemsPresenter />
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="RowHeaderStyle" TargetType="{x:Type dg:DataGridRowHeader}">
            <Setter Property="Background" Value="#A1A1A1"/>            
        </Style>
        
        <!-- style the expander toggle button -->
        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
            <Border Background="Black">
                <Path Name="Arrow" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- expander styled to give a full width header and to provide access to the toggle button -->
        <Style TargetType="Expander">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <Border Name="Border" Grid.Row="0" Background="Black">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton IsChecked="{Binding Path=IsExpanded,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" />
                                    <ContentPresenter Grid.Column="1" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border Name="Content"  Grid.Row="1" Background="Transparent" BorderThickness="0">
                                <ContentPresenter Margin="3,0,0,0" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content, Path=DesiredHeight}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Binding.XmlNamespaceManager="{StaticResource map}">
        
        <dg:DataGrid  Name="dataGrid" AutoGenerateColumns="False"                      
                      SelectionMode="Extended" GridLinesVisibility="None" RowHeaderStyle="{StaticResource RowHeaderStyle}"               
                      ItemsSource="{Binding Source={StaticResource FlickrGroupedFeed}}" HeadersVisibility="Column"
                      RowDetailsVisibilityMode="VisibleWhenSelected"  SelectedIndex="0">
            <dg:DataGrid.GroupStyle>
                <GroupStyle ContainerStyle="{StaticResource GroupContainerStyle}">
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <dg:DataGridRowsPresenter/>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </dg:DataGrid.GroupStyle>
            <dg:DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Border HorizontalAlignment="Stretch" CornerRadius="5" Background="Black" Margin="5"   Padding="5">
                        <StackPanel Orientation="Horizontal">
                            <Border BorderThickness="2" CornerRadius="2" BorderBrush="LightGray">
                            <Image Source="{Binding XPath=media:thumbnail/@url}" Width="60" Height="60"/>
                                </Border>
                            <StackPanel Orientation="Vertical" Margin="5">
                                <TextBlock Foreground="#509CD5" FontSize="20" Width="300" TextWrapping="Wrap"  Text="{Binding XPath=media:category}"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </dg:DataGrid.RowDetailsTemplate>
            <dg:DataGrid.Columns>
                <dg:DataGridTextColumn Header="Title" Binding="{Binding XPath=title}" Width="150"/>
                <dg:DataGridTextColumn Header="Published" Binding="{Binding XPath=pubDate}"/>
                <dg:DataGridTextColumn Header="Author" CanUserSort="False" Binding="{Binding XPath=media:credit}" Width="*"/>
            </dg:DataGrid.Columns>
        </dg:DataGrid> 
    </Grid>
</Window>

    